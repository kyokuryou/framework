<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="src_all" name="framework_src">
    <!--系统环境变量-->
    <import file="property.xml"/>
    <!--编译的类路径设定-->
    <path id="src_compile.classpath" refid="jar.files"/>
    <!-- 文件过滤器 -->
    <patternset id="files_filter">
        <patternset refid="ignored.files"/>
        <patternset refid="resource.files"/>
    </patternset>
    <!-- resources用于实现对资源文件和配置文件的部署 -->
    <target name="src_resources">
        <copy todir="${src.build.dirPath}" overwrite="true">
            <fileset dir="${src.dirPath}">
                <patternset refid="files_filter"/>
            </fileset>
        </copy>
    </target>
    <!--compile编译所有java文件-->
    <target name="src_compile" depends="src_prepare,src_resources">
        <mkdir dir="${src.build.dirPath}"/>
        <javac fork="true" includeAntRuntime="false" srcdir="${src.dirPath}" destdir="${src.build.dirPath}"
               executable="${target.java.home}/bin/javac" target="${target.java.version}"
               debug="true" debuglevel="source,lines,vars">
            <compilerarg value="-Xlint:all"/>
            <compilerarg line="-encoding ${target.encode}"/>
            <classpath refid="src_compile.classpath"/>
        </javac>
    </target>
    <target name="src_prepare">
        <tstamp/>
    </target>
    <!--clean清除已经编译的目标文件和已经部署的文件-->
    <target name="src_clean" description="Prepare for clean build">
        <delete quiet="true" dir="${src.build.dirPath}"/>
        <delete quiet="true">
            <fileset dir="${war.src.dirPath}">
                <include name="log4j.properties"/>
            </fileset>
        </delete>
    </target>
    <!--dist完成项目部署-->
    <target name="src_copy">
        <copy todir="${war.src.dirPath}" overwrite="true">
            <fileset dir="${src.meta.dirPath}">
                <include name="log4j.properties"/>
            </fileset>
        </copy>
    </target>

    <target name="src_project" depends="src_clean,src_prepare,src_compile"/>
    <!--all重新编译和部署整个应用-->
    <target name="src_all" depends="src_project,src_copy"/>
</project>